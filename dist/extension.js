"use strict";var l=Object.create;var a=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var u=(e,s)=>{for(var o in s)a(e,o,{get:s[o],enumerable:!0})},g=(e,s,o,n)=>{if(s&&typeof s=="object"||typeof s=="function")for(let r of h(s))!p.call(e,r)&&r!==o&&a(e,r,{get:()=>s[r],enumerable:!(n=v(s,r))||n.enumerable});return e};var c=(e,s,o)=>(o=e!=null?l(x(e)):{},g(s||!e||!e.__esModule?a(o,"default",{value:e,enumerable:!0}):o,e)),E=e=>g(a({},"__esModule",{value:!0}),e);var M={};u(M,{activate:()=>C,deactivate:()=>y});module.exports=E(M);var t=c(require("vscode")),i=c(require("fs")),w=c(require("path"));function C(e){let s=t.commands.registerCommand("vscode-test-generator.generateRtlTests",async o=>{o.fsPath.endsWith(".tsx")?await T(o.fsPath):t.window.showErrorMessage("Please select a .tsx file")});e.subscriptions.push(s)}async function T(e){let s=e.replace(".tsx",".test.tsx"),o=w.basename(e,".tsx");if(i.existsSync(s)){t.window.showInformationMessage("Test file already exists");return}try{let n=t.window.activeTextEditor;if(n){let r=n.document,f=new t.Range(0,0,r.lineCount,0),m=r.getText(f),d=await t.commands.executeCommand("github.copilot.chat.generateTests",{content:m,language:"tsx"});d?(i.writeFileSync(s,d),t.window.showInformationMessage(`Test file generated: ${s}`)):t.window.showErrorMessage("Could not generate tests using Copilot")}}catch(n){n instanceof Error?t.window.showErrorMessage(`Error generating tests: ${n.message}`):t.window.showErrorMessage("Error generating tests")}}function y(){}0&&(module.exports={activate,deactivate});
